{
  "editor.formatOnSave": true,
  "editor.tabSize": 2,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true
  },
  "go.useCodeSnippetsOnFunctionSuggest": false,
  "go.testFlags": [
    "-v",
    "-count=1"
  ],
  "go.useLanguageServer": true,
  "go.lintTool": "golangci-lint",
  "go.lintOnSave": "package",
  "go.lintFlags": [
    "--fast"
  ],
  "go.vetOnSave": "package",
  "go.testTimeout": "10s",
  "go.formatTool": "goimports",
  "go.delveConfig": {
    "dlvLoadConfig": {
      "followPointers": true,
      "maxVariableRecurse": 1,
      "maxStringLen": 64,
      "maxArrayValues": 64,
      "maxStructFields": -1
    },
    "apiVersion": 2,
    "showGlobalVariables": true
  },
  "go.editorContextMenuCommands": {
    "toggleTestFile": true,
    "addTags": true,
    "removeTags": true,
    "testAtCursor": true,
    "testFile": true,
    "testPackage": true,
    "generateTestForFunction": true,
    "generateTestForFile": true,
    "generateTestForPackage": true,
    "addImport": true,
    "testCoverage": true,
    "playground": true,
    "debugTestAtCursor": true
  },
  "go.playground": {
    "openbrowser": false,
    "share": false,
    "run": false
  },
  "go.addTags": {
    "tags": "json",
    "options": "json=omitempty",
    "promptForTags": true,
    "transform": "snakecase"
  },
  "go.removeTags": {
    "tags": "",
    "options": "",
    "promptForTags": false
  },
  "cSpell.allowCompoundWords": true,
  // Proto
  "clang-format.style": "google",
  "clang-format.executable": "C:/Program Files/LLVM/bin/clang-format.exe",
  "protoc": {
    "options": [
      "--proto_path=${workspaceRoot}",
      "--proto_path=${env.GOPATH}/src",
    ]
  },
  // 头部注释
  "fileheader.customMade": {
    "Author": "git config user.name && git config user.email",
    "Date": "Do not edit",
    "LastEditors": "git config user.name && git config user.email",
    "LastEditTime": "Do not edit", // 文件最后编辑时间
    "FilePath": "Do not edit", // 文件在项目中的相对路径 自动更新
    "Description": "code content ", // 介绍文件的作用、文件的入参、出参。
    // 版权声明获取git配置, 与Author字段一致: ${git_name} ${git_email} ${git_name_email}
    "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by ${git_name_email}, All Rights Reserved. "
  },
  // 函数注释
  "fileheader.cursorMode": {
    "description": "", // 函数注释生成之后，光标移动到这里
    "param": "", // param 开启函数参数自动提取 需要将光标放在函数行或者函数上方的空白行
    "return": "",
  }
}